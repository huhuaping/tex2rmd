% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/returnCommandArg.r
\name{returnCommandArg}
\alias{returnCommandArg}
\title{returnCommandArg}
\usage{
returnCommandArg(x, cmd, argNum = 1, optArg = FALSE)
}
\arguments{
\item{x}{An array of character strings (lines from a Latex file)
to process.}

\item{cmd}{A character string naming the command to look for in \code{x}.
This is the command, without the "\\".  \code{cmd} is simply pasted to the
end of two slashes "\\" and the results becomves a regular expression.
Hence, regular expressions like "(ref|label)" will return arguments
for the first \\ref or \\label command in \code{x}.  \code{cmd} = "[0-9]"
will return arguments of any command with a number in it. Etc.}

\item{argNum}{The number of the argument to \code{cmd} that is desired.}

\item{optArg}{True or false depending on whether one of the optional arguments
or one of the required arguments is desired.}
}
\value{
The desired argument as a single text string. If the command
does not exist in \code{x}, a string of length 0 (i.e., "") is returned.
If the requested argument does not exist (e.g., \code{argNum} too big),
a string of length 0 (i.e., "") is returned.
}
\description{
Return an argument of a Tex command.
}
\details{
Tex command is something like "\\comand[opt1]{arg1}{arg2}",
and this routine returns one of those arguments, either optional or required.
}
\examples{

x <- c("kdkdk", "kdkd  \\\\title{My Title", "is Sir} dkdk")
returnCommandArg(x, "title")

x <- c("\\\\cmd[opt1][opt2]{arg1}{arg2}")
returnCommandArg(x, "cmd", 1)  # "arg1"
returnCommandArg(x, "cmd", 2)  # "arg2"
returnCommandArg(x, "cmd", 1, TRUE)  # "opt1"
returnCommandArg(x, "cmd", 2, TRUE)  # "opt2"

}
